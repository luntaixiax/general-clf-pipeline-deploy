name: test and build fake data generator
on:
  push:
    branches:
      - 'main'
    paths:
      - "fake-data-generator/**"
      #- ".github/workflows/build-faker.yml"

jobs:
  # job1 - testing
  unit-test:
    runs-on: luntaixia-ubuntu # need self hosted runner as need connect to local servers
    steps:
      - uses: actions/checkout@v4
      
      - name: setup python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'
      
      - name: install python library
        working-directory: fake-data-generator
        run: |
          pip install pytest pytest-cov
          pip install -r requirements.txt

      - name: unit testing
        working-directory: fake-data-generator
        env:
          ENV: dev
          SECRET_TOML_PATH: ${{ vars.SECRET_TOML_PATH }}
        run: |
          echo $ENV
          echo $SECRET_TOML_PATH
          python -m pytest -s .

      - name: update configs
        working-directory: fake-data-generator
        env:
          ENV: dev
          SECRET_TOML_PATH: ${{ vars.SECRET_TOML_PATH }}
        run: |
          python -m src.dag_run update-exec-plan-2-db
          python -m src.dag_run register-fake-model

  # job2 - CI
  build-image:
    runs-on: ubuntu-latest
    needs: unit-test  # will depend on previous step `build`
    steps:
      - uses: actions/checkout@v4

      - name: read model version tag
        id: ver_tag
        uses: jbutcher5/read-yaml@main  # read yaml prebuilt action
        with:
          file: './fake-data-generator/build.yml'
          key-path: '["metadata", "version-tag"]'

      - name: read dockerhub model name
        id: model_nm
        uses: jbutcher5/read-yaml@main  # read yaml prebuilt action
        with:
          file: './fake-data-generator/build.yml'
          key-path: '["metadata", "docker-image-name"]'

      - name: Dockerhub Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: build and push image
        working-directory: fake-data-generator
        run: |
          model_hub_nm=${{ secrets.DOCKERHUB_USERNAME }}/${{ steps.model_nm.outputs.data }}
          docker build -t ${model_hub_nm}:${{ steps.ver_tag.outputs.data }} .
          docker tag ${model_hub_nm}:${{ steps.ver_tag.outputs.data }} ${model_hub_nm}:latest

          docker push ${model_hub_nm}:${{ steps.ver_tag.outputs.data }}
          docker push ${model_hub_nm}:latest

  # job3 - CD
  deploy:
    runs-on: luntaixia-ubuntu # need self hosted runner as need connect to local servers
    needs: build-image  # will depend on previous step `build`
    steps:
      - uses: actions/checkout@v4

      - name: read model version tag
        id: ver_tag
        uses: jbutcher5/read-yaml@main  # read yaml prebuilt action
        with:
          file: './fake-data-generator/build.yml'
          key-path: '["metadata", "version-tag"]'

      - name: read dockerhub model name
        id: model_nm
        uses: jbutcher5/read-yaml@main  # read yaml prebuilt action
        with:
          file: './fake-data-generator/build.yml'
          key-path: '["metadata", "docker-image-name"]'

      - name: pull image on faker prod machine
        uses: appleboy/ssh-action@v1.0.3
        env:
          IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/${{ steps.model_nm.outputs.data }}:${{ steps.ver_tag.outputs.data }}
        with:
          host: ${{ secrets.FAKER_HOST }}
          password: ${{ secrets.FAKER_PASSWORD }}
          username: ${{ secrets.FAKER_USERNAME }}
          port: ${{ secrets.FAKER_PORT }}
          envs: IMAGE
          script: |
            echo "Login to $(hostname)"
            echo "trying to remove existing docker image: $IMAGE"
            /Volume1/@apps/DockerEngine/dockerd/bin/docker rmi -f $IMAGE
            echo "trying to pull docker image: $IMAGE"
            /Volume1/@apps/DockerEngine/dockerd/bin/docker pull $IMAGE